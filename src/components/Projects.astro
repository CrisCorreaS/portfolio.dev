---
import GitHub from "./icons/GitHub.astro";
import Python from "./icons/Python.astro";
import R from "./icons/R.astro";
import Tensorflow from "./icons/Tensorflow.astro";
import Pytorch from "./icons/Pytorch.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";

const TAGS = {
  PYTHON: {
    name: "Python",
    class: "bg-[#2B5B84] text-white",
    icon: Python,
  },
  R: {
    name: "R",
    class: "bg-[#ECEFF1] text-black",
    icon: R,
  },
  TENSORFLOW: {
    name: "Tensorflow",
    class: "bg-[#1E1E1E] text-white",
    icon: Tensorflow,
  },
  PYTORCH: {
    name: "PyTorch",
    class: "bg-[#242424] text-white",
    icon: Pytorch,
  },
};
const PROJECTS = [
  {
    title: "Alzheimer's Disease Prediction Classification Models",
    description:
      "Built and tested 15 ML models to predict Alzheimer's using the OASIS-2 MRI dataset. Analysed data, engineered features and compared performance using Python, TensorFlow and PyTorch.",
    github:
      "https://github.com/CrisCorreaS/AD-prediction-classification-models",
    image: "/projects/ad-models.webp",
    tags: [TAGS.R, TAGS.PYTHON, TAGS.TENSORFLOW],
  },
  {
    title: "Artificial Intelligence in Cancer Detection - Speaker Session",
    description:
      "Build with AI workshop where I demonstrated how to train LASSO, SVM  and ANN models using both R and Python and Tensorflow. Developed from scratch with hands-on examples in cancer detection.",
    link: "https://gdg.community.dev/events/details/google-gdg-a-coruna-presents-inteligencia-artificial-en-la-deteccion-del-cancer/",
    github:
      "https://github.com/CrisCorreaS/Artificial-Intelligence-in-Cancer-Detection-Speaker-Session",
    image: "/projects/ai-cancer.webp",
    tags: [TAGS.PYTHON, TAGS.TENSORFLOW, TAGS.PYTORCH],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt="Cristina's Bioinformatics Projects"
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Info Link
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
